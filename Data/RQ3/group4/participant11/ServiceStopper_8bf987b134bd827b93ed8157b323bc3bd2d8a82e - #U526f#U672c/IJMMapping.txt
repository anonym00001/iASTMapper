333
RuntimeException              (LINE:-89, INDEX:2) => RuntimeException              (LINE:+89, INDEX:2)
MethodDeclaration (LINE:-63) => MethodDeclaration (LINE:+63)
(line:66 SimpleName) service => (line:66 SimpleName) service
(line:95 MethodInvocation) LogFactory getLog service getClass => (line:95 MethodInvocation) LoggerFactory getLogger service getClass
(line:40 InfixExpression) service != null => (line:40 InfixExpression) service != null
(line:41 MethodInvocation) service stop => (line:41 MethodInvocation) service stop
(line:83 SimpleName) firstException => (line:83 SimpleName) firstException
iter                          (LINE:-64, INDEX:6) => iter                          (LINE:+64, INDEX:6)
if                            (LINE:-72, INDEX:0) => if                            (LINE:+72, INDEX:0)
public                        (LINE:-38, INDEX:0) => public                        (LINE:+38, INDEX:0)
catch                         (LINE:-55, INDEX:0) => catch                         (LINE:+55, INDEX:0)
error                         (LINE:-96, INDEX:1) => error                         (LINE:+96, INDEX:1)
private                       (LINE:-33, INDEX:0) => private                       (LINE:+33, INDEX:0)
stopServices                  (LINE:-63, INDEX:2) => stopServices                  (LINE:+63, INDEX:2)
Exception                     (LINE:-80, INDEX:4) => Exception                     (LINE:+80, INDEX:4)
(line:44 SimpleName) e => (line:44 SimpleName) e
RuntimeException              (LINE:-86, INDEX:0) => RuntimeException              (LINE:+86, INDEX:0)
(line:95 MethodInvocation) service getClass => (line:95 MethodInvocation) service getClass
ExpressionStatement (LINE:-66) => ExpressionStatement (LINE:+66)
firstException                (LINE:-89, INDEX:5) => firstException                (LINE:+89, INDEX:5)
firstException                (LINE:-89, INDEX:6) => firstException                (LINE:+89, INDEX:6)
(line:63 SimpleType) List => (line:63 SimpleType) List
IfStatement (LINE:-82) => IfStatement (LINE:+82)
"Unknown type of exception: " (LINE:-89, INDEX:3) => "Unknown type of exception: " (LINE:+89, INDEX:3)
(line:94 SimpleType) Object => (line:94 SimpleType) Object
e                             (LINE:-55, INDEX:2) => e                             (LINE:+55, INDEX:2)
e                             (LINE:-86, INDEX:1) => e                             (LINE:+86, INDEX:1)
(line:94 Modifier) protected => (line:94 Modifier) protected
+                             (LINE:-96, INDEX:3) => +                             (LINE:+96, INDEX:3)
org                           (LINE:-17, INDEX:1) => org                           (LINE:+17, INDEX:1)
org                           (LINE:-24, INDEX:1) => org                           (LINE:+24, INDEX:1)
activemq                      (LINE:-22, INDEX:3) => activemq                      (LINE:+22, INDEX:3)
Service                       (LINE:-38, INDEX:3) => Service                       (LINE:+38, INDEX:3)
(line:56 MethodInvocation) onException stopClosure e => (line:56 MethodInvocation) onException stopClosure e
instanceof                    (LINE:-82, INDEX:2) => instanceof                    (LINE:+82, INDEX:2)
instanceof                    (LINE:-85, INDEX:2) => instanceof                    (LINE:+85, INDEX:2)
Block (LINE:-64) => Block (LINE:+64)
(line:72 SimpleName) firstException => (line:72 SimpleName) firstException
(line:83 SimpleType) Exception => (line:83 SimpleType) Exception
(line:95 SimpleName) LogFactory => (line:95 SimpleName) LoggerFactory
Block (LINE:-82) => Block (LINE:+82)
(line:94 SimpleName) service => (line:94 SimpleName) service
(line:38 SimpleType) Service => (line:38 SimpleType) Service
(line:33 VariableDeclarationFragment) firstException => (line:33 VariableDeclarationFragment) firstException
(line:86 VariableDeclarationFragment) e = RuntimeException firstException => (line:86 VariableDeclarationFragment) e = RuntimeException firstException
(line:80 Modifier) public => (line:80 Modifier) public
(line:80 PrimitiveType) void => (line:80 PrimitiveType) void
Block (LINE:-43) => Block (LINE:+43)
(line:80 SimpleType) Exception => (line:80 SimpleType) Exception
MethodDeclaration (LINE:-94) => MethodDeclaration (LINE:+94)
(line:85 SimpleName) firstException => (line:85 SimpleName) firstException
Service                       (LINE:-65, INDEX:3) => Service                       (LINE:+65, INDEX:3)
services                      (LINE:-63, INDEX:4) => services                      (LINE:+63, INDEX:4)
throw                         (LINE:-84, INDEX:0) => throw                         (LINE:+84, INDEX:0)
service                       (LINE:-40, INDEX:1) => service                       (LINE:+40, INDEX:1)
CatchClause (LINE:-55) => CatchClause (LINE:+55)
onException                   (LINE:-56, INDEX:0) => onException                   (LINE:+56, INDEX:0)
firstException                (LINE:-33, INDEX:2) => firstException                (LINE:+33, INDEX:2)
(line:82 SimpleName) firstException => (line:82 SimpleName) firstException
(line:95 SimpleType) Log => (line:95 SimpleType) Logger
firstException                (LINE:-82, INDEX:1) => firstException                (LINE:+82, INDEX:1)
firstException                (LINE:-83, INDEX:4) => firstException                (LINE:+83, INDEX:4)
firstException                (LINE:-85, INDEX:1) => firstException                (LINE:+85, INDEX:1)
IfStatement (LINE:-40) => IfStatement (LINE:+40)
ExpressionStatement (LINE:-44) => ExpressionStatement (LINE:+44)
(line:73 SimpleName) firstException => (line:73 SimpleName) firstException
(line:71 MethodInvocation) logError owner e => (line:71 MethodInvocation) logError owner e
ExpressionStatement (LINE:-96) => ExpressionStatement (LINE:+96)
(line:85 SimpleType) RuntimeException => (line:85 SimpleType) RuntimeException
Log                           (LINE:-95, INDEX:0) => Logger                        (LINE:+95, INDEX:0)
stop                          (LINE:-66, INDEX:0) => stop                          (LINE:+66, INDEX:0)
java                          (LINE:-19, INDEX:1) => java                          (LINE:+19, INDEX:1)
util                          (LINE:-20, INDEX:2) => util                          (LINE:+20, INDEX:2)
e                             (LINE:-83, INDEX:1) => e                             (LINE:+83, INDEX:1)
(line:84 SimpleName) e => (line:84 SimpleName) e
=                             (LINE:-86, INDEX:2) => =                             (LINE:+86, INDEX:2)
==                            (LINE:-72, INDEX:2) => ==                            (LINE:+72, INDEX:2)
import                        (LINE:-23, INDEX:0) => import                        (LINE:+23, INDEX:0)
service                       (LINE:-94, INDEX:4) => service                       (LINE:+94, INDEX:4)
service                       (LINE:-96, INDEX:4) => service                       (LINE:+96, INDEX:4)
logError                      (LINE:-94, INDEX:2) => logError                      (LINE:+94, INDEX:2)
IfStatement (LINE:-81) => IfStatement (LINE:+81)
(line:52 PrimitiveType) void => (line:52 PrimitiveType) void
onException                   (LINE:-70, INDEX:2) => onException                   (LINE:+70, INDEX:2)
(line:38 SimpleName) service => (line:38 SimpleName) service
Block (LINE:-81) => Block (LINE:+81)
throwFirstException           (LINE:-80, INDEX:2) => throwFirstException           (LINE:+80, INDEX:2)
VariableDeclarationStatement (LINE:-86) => VariableDeclarationStatement (LINE:+86)
Block (LINE:-63) => Block (LINE:+63)
(line:81 InfixExpression) firstException != null => (line:81 InfixExpression) firstException != null
(line:94 SimpleType) Throwable => (line:94 SimpleType) Throwable
ImportDeclaration (LINE:-24) => ImportDeclaration (LINE:+24)
e                             (LINE:-44, INDEX:2) => e                             (LINE:+44, INDEX:2)
iter                          (LINE:-64, INDEX:2) => iter                          (LINE:+64, INDEX:2)
void                          (LINE:-52, INDEX:1) => void                          (LINE:+52, INDEX:1)
e                             (LINE:-71, INDEX:2) => e                             (LINE:+71, INDEX:2)
if                            (LINE:-81, INDEX:0) => if                            (LINE:+81, INDEX:0)
(line:89 SimpleName) firstException => (line:89 SimpleName) firstException
iterator                      (LINE:-64, INDEX:5) => iterator                      (LINE:+64, INDEX:5)
logError                      (LINE:-71, INDEX:0) => logError                      (LINE:+71, INDEX:0)
TypeDeclaration (LINE:-32) => TypeDeclaration (LINE:+32)
(line:56 SimpleName) stopClosure => (line:56 SimpleName) stopClosure
public                        (LINE:-63, INDEX:0) => public                        (LINE:+63, INDEX:0)
Exception                     (LINE:-43, INDEX:1) => Exception                     (LINE:+43, INDEX:1)
(line:94 SimpleName) e => (line:94 SimpleName) e
protected                     (LINE:-94, INDEX:0) => protected                     (LINE:+94, INDEX:0)
firstException                (LINE:-72, INDEX:1) => firstException                (LINE:+72, INDEX:1)
(line:33 Modifier) private => (line:33 Modifier) private
(line:65 SimpleName) iter => (line:65 SimpleName) iter
(line:43 SimpleName) e => (line:43 SimpleName) e
FieldDeclaration (LINE:-33) => FieldDeclaration (LINE:+33)
ExpressionStatement (LINE:-41) => ExpressionStatement (LINE:+41)
(line:96 InfixExpression) "Could not stop service: " + service + ". Reason: " + e => (line:96 InfixExpression) "Could not stop service: " + service + ". Reason: " + e
(line:70 SimpleType) Object => (line:70 SimpleType) Object
ThrowStatement (LINE:-89) => ThrowStatement (LINE:+89)
util                          (LINE:-17, INDEX:4) => util                          (LINE:+17, INDEX:4)
=                             (LINE:-83, INDEX:2) => =                             (LINE:+83, INDEX:2)
apache                        (LINE:-17, INDEX:2) => apache                        (LINE:+17, INDEX:2)
apache                        (LINE:-24, INDEX:2) => slf4j                         (LINE:+24, INDEX:2)
hasNext                       (LINE:-64, INDEX:7) => hasNext                       (LINE:+64, INDEX:7)
class                         (LINE:-32, INDEX:1) => class                         (LINE:+32, INDEX:1)
(line:64 SimpleName) services => (line:64 SimpleName) services
(line:73 Assignment) firstException = e => (line:73 Assignment) firstException = e
throw                         (LINE:-89, INDEX:0) => throw                         (LINE:+89, INDEX:0)
Block (LINE:-94) => Block (LINE:+94)
commons                       (LINE:-23, INDEX:3) => Logger                        (LINE:+23, INDEX:3)
service                       (LINE:-41, INDEX:0) => service                       (LINE:+41, INDEX:0)
(line:32 Modifier) public => (line:32 Modifier) public
ImportDeclaration (LINE:-22) => ImportDeclaration (LINE:+22)
Block (LINE:-39) => Block (LINE:+39)
ThrowStatement (LINE:-87) => ThrowStatement (LINE:+87)
(line:17 QualifiedName) org apache activemq util => (line:17 QualifiedName) org apache activemq util
(line:70 SimpleName) owner => (line:70 SimpleName) owner
MethodDeclaration (LINE:-52) => MethodDeclaration (LINE:+52)
(line:89 StringLiteral) "Unknown type of exception: " => (line:89 StringLiteral) "Unknown type of exception: "
(line:41 SimpleName) service => (line:41 SimpleName) service
Block (LINE:-38) => Block (LINE:+38)
(line:63 PrimitiveType) void => (line:63 PrimitiveType) void
(line:96 SimpleName) e => (line:96 SimpleName) e
for                           (LINE:-64, INDEX:0) => for                           (LINE:+64, INDEX:0)
null                          (LINE:-72, INDEX:3) => null                          (LINE:+72, INDEX:3)
e                             (LINE:-94, INDEX:6) => e                             (LINE:+94, INDEX:6)
org                           (LINE:-22, INDEX:1) => org                           (LINE:+22, INDEX:1)
(line:52 SimpleName) stopClosure => (line:52 SimpleName) stopClosure
owner                         (LINE:-70, INDEX:4) => owner                         (LINE:+70, INDEX:4)
(line:65 SimpleType) Service => (line:65 SimpleType) Service
(line:89 SimpleName) firstException => (line:89 SimpleName) firstException
(line:64 MethodInvocation) services iterator => (line:64 MethodInvocation) services iterator
(line:65 SimpleType) Service => (line:65 SimpleType) Service
cs.zju.algorithm.element.RootElement@6de => cs.zju.algorithm.element.RootElement@6e4
stopClosure                   (LINE:-52, INDEX:4) => stopClosure                   (LINE:+52, INDEX:4)
Block (LINE:-40) => Block (LINE:+40)
RuntimeException              (LINE:-86, INDEX:3) => RuntimeException              (LINE:+86, INDEX:3)
ForStatement (LINE:-64) => ForStatement (LINE:+64)
(line:40 SimpleName) service => (line:40 SimpleName) service
ImportDeclaration (LINE:-23) => ImportDeclaration (LINE:+23)
Block (LINE:-80) => Block (LINE:+80)
(line:86 SimpleName) firstException => (line:86 SimpleName) firstException
(line:33 SimpleType) Throwable => (line:33 SimpleType) Throwable
(line:65 MethodInvocation) iter next => (line:65 MethodInvocation) iter next
(line:81 SimpleName) firstException => (line:81 SimpleName) firstException
(line:54 SimpleName) stopClosure => (line:54 SimpleName) stopClosure
"Could not stop service: "    (LINE:-96, INDEX:2) => "Could not stop service: "    (LINE:+96, INDEX:2)
(line:70 PrimitiveType) void => (line:70 PrimitiveType) void
(line:72 NullLiteral) null => (line:72 NullLiteral) null
log                           (LINE:-95, INDEX:1) => log                           (LINE:+95, INDEX:1)
void                          (LINE:-38, INDEX:1) => void                          (LINE:+38, INDEX:1)
e                             (LINE:-70, INDEX:6) => e                             (LINE:+70, INDEX:6)
!=                            (LINE:-81, INDEX:2) => !=                            (LINE:+81, INDEX:2)
import                        (LINE:-20, INDEX:0) => import                        (LINE:+20, INDEX:0)
(line:43 SimpleType) Exception => (line:43 SimpleType) Exception
service                       (LINE:-65, INDEX:1) => service                       (LINE:+65, INDEX:1)
TryStatement (LINE:-53) => TryStatement (LINE:+53)
getClass                      (LINE:-95, INDEX:6) => getClass                      (LINE:+95, INDEX:6)
throw                         (LINE:-87, INDEX:0) => throw                         (LINE:+87, INDEX:0)
public                        (LINE:-70, INDEX:0) => public                        (LINE:+70, INDEX:0)
public                        (LINE:-80, INDEX:0) => public                        (LINE:+80, INDEX:0)
Throwable                     (LINE:-55, INDEX:1) => Throwable                     (LINE:+55, INDEX:1)
MethodDeclaration (LINE:-70) => MethodDeclaration (LINE:+70)
firstException                (LINE:-86, INDEX:4) => firstException                (LINE:+86, INDEX:4)
(line:38 Modifier) public => (line:38 Modifier) public
(line:55 SimpleType) Throwable => (line:55 SimpleType) Throwable
CatchClause (LINE:-43) => CatchClause (LINE:+43)
(line:96 SimpleName) log => (line:96 SimpleName) log
ImportDeclaration (LINE:-19) => ImportDeclaration (LINE:+19)
(line:55 SimpleName) e => (line:55 SimpleName) e
util                          (LINE:-19, INDEX:2) => util                          (LINE:+19, INDEX:2)
List                          (LINE:-20, INDEX:3) => List                          (LINE:+20, INDEX:3)
e                             (LINE:-84, INDEX:1) => e                             (LINE:+84, INDEX:1)
service                       (LINE:-66, INDEX:1) => service                       (LINE:+66, INDEX:1)
TryStatement (LINE:-39) => TryStatement (LINE:+39)
VariableDeclarationStatement (LINE:-65) => VariableDeclarationStatement (LINE:+65)
getLog                        (LINE:-95, INDEX:4) => getLogger                     (LINE:+95, INDEX:4)
VariableDeclarationStatement (LINE:-83) => VariableDeclarationStatement (LINE:+83)
Throwable                     (LINE:-33, INDEX:1) => Throwable                     (LINE:+33, INDEX:1)
Exception                     (LINE:-83, INDEX:3) => Exception                     (LINE:+83, INDEX:3)
Block (LINE:-55) => Block (LINE:+55)
(line:70 SimpleName) e => (line:70 SimpleName) e
(line:82 SimpleType) Exception => (line:82 SimpleType) Exception
firstException                (LINE:-81, INDEX:1) => firstException                (LINE:+81, INDEX:1)
ImportDeclaration (LINE:-20) => ImportDeclaration (LINE:+20)
(line:96 StringLiteral) "Could not stop service: " => (line:96 StringLiteral) "Could not stop service: "
ExpressionStatement (LINE:-56) => ExpressionStatement (LINE:+56)
(line:73 SimpleName) e => (line:73 SimpleName) e
else                          (LINE:-85, INDEX:4) => else                          (LINE:+85, INDEX:4)
=                             (LINE:-64, INDEX:3) => =                             (LINE:+64, INDEX:3)
=                             (LINE:-73, INDEX:1) => =                             (LINE:+73, INDEX:1)
(line:44 MethodInvocation) onException service e => (line:44 MethodInvocation) onException service e
run                           (LINE:-52, INDEX:2) => run                           (LINE:+52, INDEX:2)
package                       (LINE:-17, INDEX:0) => package                       (LINE:+17, INDEX:0)
service                       (LINE:-38, INDEX:4) => service                       (LINE:+38, INDEX:4)
throws                        (LINE:-80, INDEX:3) => throws                        (LINE:+80, INDEX:3)
Exception                     (LINE:-83, INDEX:0) => Exception                     (LINE:+83, INDEX:0)
(line:94 PrimitiveType) void => (line:94 PrimitiveType) void
Block (LINE:-88) => Block (LINE:+88)
(line:66 MethodInvocation) stop service => (line:66 MethodInvocation) stop service
ExpressionStatement (LINE:-73) => ExpressionStatement (LINE:+73)
(line:63 Modifier) public => (line:63 Modifier) public
(line:89 SimpleType) RuntimeException => (line:89 SimpleType) RuntimeException
(line:87 SimpleName) e => (line:87 SimpleName) e
(line:40 NullLiteral) null => (line:40 NullLiteral) null
!=                            (LINE:-40, INDEX:2) => !=                            (LINE:+40, INDEX:2)
(line:64 MethodInvocation) iter hasNext => (line:64 MethodInvocation) iter hasNext
iter                          (LINE:-65, INDEX:4) => iter                          (LINE:+65, INDEX:4)
null                          (LINE:-81, INDEX:3) => null                          (LINE:+81, INDEX:3)
IfStatement (LINE:-72) => IfStatement (LINE:+72)
VariableDeclarationStatement (LINE:-95) => VariableDeclarationStatement (LINE:+95)
+                             (LINE:-96, INDEX:7) => +                             (LINE:+96, INDEX:7)
org                           (LINE:-23, INDEX:1) => org                           (LINE:+23, INDEX:1)
apache                        (LINE:-22, INDEX:2) => apache                        (LINE:+22, INDEX:2)
import                        (LINE:-24, INDEX:0) => import                        (LINE:+24, INDEX:0)
(line:56 SimpleName) e => (line:56 SimpleName) e
Service                       (LINE:-22, INDEX:4) => Service                       (LINE:+22, INDEX:4)
(line:72 InfixExpression) firstException == null => (line:72 InfixExpression) firstException == null
(line:64 SimpleName) iter => (line:64 SimpleName) iter
firstException                (LINE:-73, INDEX:0) => firstException                (LINE:+73, INDEX:0)
ThrowStatement (LINE:-84) => ThrowStatement (LINE:+84)
(line:95 VariableDeclarationFragment) log = LogFactory getLog service getClass => (line:95 VariableDeclarationFragment) log = LoggerFactory getLogger service getClass
new                           (LINE:-89, INDEX:1) => new                           (LINE:+89, INDEX:1)
e                             (LINE:-56, INDEX:2) => e                             (LINE:+56, INDEX:2)
void                          (LINE:-63, INDEX:1) => void                          (LINE:+63, INDEX:1)
e                             (LINE:-73, INDEX:2) => e                             (LINE:+73, INDEX:2)
=                             (LINE:-95, INDEX:2) => =                             (LINE:+95, INDEX:2)
+                             (LINE:-96, INDEX:5) => +                             (LINE:+96, INDEX:5)
ExpressionStatement (LINE:-54) => ExpressionStatement (LINE:+54)
(line:86 SimpleType) RuntimeException => (line:86 SimpleType) RuntimeException
(line:64 VariableDeclarationFragment) iter = services iterator => (line:64 VariableDeclarationFragment) iter = services iterator
Iterator                      (LINE:-64, INDEX:1) => Iterator                      (LINE:+64, INDEX:1)
services                      (LINE:-64, INDEX:4) => services                      (LINE:+64, INDEX:4)
service                       (LINE:-44, INDEX:1) => service                       (LINE:+44, INDEX:1)
execute                       (LINE:-54, INDEX:1) => execute                       (LINE:+54, INDEX:1)
ServiceStopper                (LINE:-32, INDEX:2) => ServiceStopper                (LINE:+32, INDEX:2)
ExpressionStatement (LINE:-71) => ExpressionStatement (LINE:+71)
(line:96 MethodInvocation) log error "Could not stop service: " + service + ". Reason: " + e e => (line:96 MethodInvocation) log error "Could not stop service: " + service + ". Reason: " + e e
(line:96 SimpleName) service => (line:96 SimpleName) service
(line:89 ClassInstanceCreation) new RuntimeException "Unknown type of exception: " + firstException firstException => (line:89 ClassInstanceCreation) new RuntimeException "Unknown type of exception: " + firstException firstException
(line:64 SimpleType) Iterator => (line:64 SimpleType) Iterator
PackageDeclaration (LINE:-17) => PackageDeclaration (LINE:+17)
log                           (LINE:-96, INDEX:0) => log                           (LINE:+96, INDEX:0)
stop                          (LINE:-38, INDEX:2) => stop                          (LINE:+38, INDEX:2)
e                             (LINE:-96, INDEX:8) => e                             (LINE:+96, INDEX:8)
(line:38 PrimitiveType) void => (line:38 PrimitiveType) void
try                           (LINE:-39, INDEX:0) => try                           (LINE:+39, INDEX:0)
import                        (LINE:-19, INDEX:0) => import                        (LINE:+19, INDEX:0)
(line:96 SimpleName) e => (line:96 SimpleName) e
(line:71 SimpleName) e => (line:71 SimpleName) e
activemq                      (LINE:-17, INDEX:3) => activemq                      (LINE:+17, INDEX:3)
commons                       (LINE:-24, INDEX:3) => LoggerFactory                 (LINE:+24, INDEX:3)
Object                        (LINE:-94, INDEX:3) => Object                        (LINE:+94, INDEX:3)
Exception                     (LINE:-82, INDEX:3) => Exception                     (LINE:+82, INDEX:3)
Throwable                     (LINE:-94, INDEX:5) => Throwable                     (LINE:+94, INDEX:5)
RuntimeException              (LINE:-85, INDEX:3) => RuntimeException              (LINE:+85, INDEX:3)
Block (LINE:-53) => Block (LINE:+53)
(line:52 Modifier) public => (line:52 Modifier) public
Block (LINE:-72) => Block (LINE:+72)
(line:65 VariableDeclarationFragment) service = Service iter next => (line:65 VariableDeclarationFragment) service = Service iter next
Block (LINE:-52) => Block (LINE:+52)
(line:70 Modifier) public => (line:70 Modifier) public
IfStatement (LINE:-85) => IfStatement (LINE:+85)
List                          (LINE:-63, INDEX:3) => List                          (LINE:+63, INDEX:3)
null                          (LINE:-40, INDEX:3) => null                          (LINE:+40, INDEX:3)
stop                          (LINE:-41, INDEX:1) => stop                          (LINE:+41, INDEX:1)
e                             (LINE:-87, INDEX:1) => e                             (LINE:+87, INDEX:1)
try                           (LINE:-53, INDEX:0) => try                           (LINE:+53, INDEX:0)
public                        (LINE:-52, INDEX:0) => public                        (LINE:+52, INDEX:0)
catch                         (LINE:-43, INDEX:0) => catch                         (LINE:+43, INDEX:0)
Iterator                      (LINE:-19, INDEX:3) => Iterator                      (LINE:+19, INDEX:3)
Callback                      (LINE:-52, INDEX:3) => Callback                      (LINE:+52, INDEX:3)
owner                         (LINE:-71, INDEX:1) => owner                         (LINE:+71, INDEX:1)
(line:44 SimpleName) service => (line:44 SimpleName) service
". Reason: "                  (LINE:-96, INDEX:6) => ". Reason: "                  (LINE:+96, INDEX:6)
Throwable                     (LINE:-70, INDEX:5) => Throwable                     (LINE:+70, INDEX:5)
LogFactory                    (LINE:-95, INDEX:3) => LoggerFactory                 (LINE:+95, INDEX:3)
(line:83 SimpleType) Exception => (line:83 SimpleType) Exception
(line:81 NullLiteral) null => (line:81 NullLiteral) null
(line:70 SimpleType) Throwable => (line:70 SimpleType) Throwable
if                            (LINE:-40, INDEX:0) => if                            (LINE:+40, INDEX:0)
e                             (LINE:-43, INDEX:2) => e                             (LINE:+43, INDEX:2)
(line:54 MethodInvocation) stopClosure execute => (line:54 MethodInvocation) stopClosure execute
void                          (LINE:-70, INDEX:1) => void                          (LINE:+70, INDEX:1)
MethodDeclaration (LINE:-80) => MethodDeclaration (LINE:+80)
void                          (LINE:-80, INDEX:1) => void                          (LINE:+80, INDEX:1)
(line:82 InstanceofExpression) firstException instanceof Exception => (line:82 InstanceofExpression) firstException instanceof Exception
else                          (LINE:-88, INDEX:4) => else                          (LINE:+88, INDEX:4)
void                          (LINE:-94, INDEX:1) => void                          (LINE:+94, INDEX:1)
java                          (LINE:-20, INDEX:1) => java                          (LINE:+20, INDEX:1)
+                             (LINE:-89, INDEX:4) => +                             (LINE:+89, INDEX:4)
if                            (LINE:-82, INDEX:0) => if                            (LINE:+82, INDEX:0)
if                            (LINE:-85, INDEX:0) => if                            (LINE:+85, INDEX:0)
apache                        (LINE:-23, INDEX:2) => slf4j                         (LINE:+23, INDEX:2)
public                        (LINE:-32, INDEX:0) => public                        (LINE:+32, INDEX:0)
stopClosure                   (LINE:-56, INDEX:1) => stopClosure                   (LINE:+56, INDEX:1)
(line:89 InfixExpression) "Unknown type of exception: " + firstException => (line:89 InfixExpression) "Unknown type of exception: " + firstException
(line:86 SimpleType) RuntimeException => (line:86 SimpleType) RuntimeException
(line:71 SimpleName) owner => (line:71 SimpleName) owner
(line:95 SimpleName) service => (line:95 SimpleName) service
(line:96 StringLiteral) ". Reason: " => (line:96 StringLiteral) ". Reason: "
Block (LINE:-70) => Block (LINE:+70)
(line:63 SimpleName) services => (line:63 SimpleName) services
MethodDeclaration (LINE:-38) => MethodDeclaration (LINE:+38)
(line:85 InstanceofExpression) firstException instanceof RuntimeException => (line:85 InstanceofExpression) firstException instanceof RuntimeException
(line:52 SimpleType) Callback => (line:52 SimpleType) Callback
next                          (LINE:-65, INDEX:5) => next                          (LINE:+65, INDEX:5)
Block (LINE:-85) => Block (LINE:+85)
=                             (LINE:-65, INDEX:2) => =                             (LINE:+65, INDEX:2)
e                             (LINE:-96, INDEX:9) => e                             (LINE:+96, INDEX:9)
import                        (LINE:-22, INDEX:0) => import                        (LINE:+22, INDEX:0)
Service                       (LINE:-65, INDEX:0) => Service                       (LINE:+65, INDEX:0)
service                       (LINE:-95, INDEX:5) => service                       (LINE:+95, INDEX:5)
Object                        (LINE:-70, INDEX:3) => Object                        (LINE:+70, INDEX:3)
onException                   (LINE:-44, INDEX:0) => onException                   (LINE:+44, INDEX:0)
stopClosure                   (LINE:-54, INDEX:0) => stopClosure                   (LINE:+54, INDEX:0)
(line:83 VariableDeclarationFragment) e = Exception firstException => (line:83 VariableDeclarationFragment) e = Exception firstException
